/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function milo_noop(a: number, b: number, c: number): number;
export function milo_free_string(a: number): void;
export function milo_create(): number;
export function milo_destroy(a: number): void;
export function milo_reset(a: number, b: number): void;
export function milo_parse(a: number, b: number, c: number): number;
export function milo_pause(a: number): void;
export function milo_resume(a: number): void;
export function milo_finish(a: number): void;
export function milo_state_string(a: number): number;
export function milo_error_code_string(a: number): number;
export function milo_error_description_string(a: number): number;
export function __wbg_parser_free(a: number): void;
export function parser_new(): number;
export function parser_reset(a: number, b: number): void;
export function parser_clear(a: number): void;
export function parser_pause(a: number): void;
export function parser_resume(a: number): void;
export function parser_finish(a: number): void;
export function parser_stateString(a: number, b: number): void;
export function parser_errorCodeString(a: number, b: number): void;
export function parser_errorDescription(a: number, b: number): void;
export function parser_new_with_id(a: number): number;
export function parser_parse(a: number, b: number, c: number, d: number, e: number): void;
export function parser_state(a: number): number;
export function parser_position(a: number): number;
export function parser_parsed(a: number): number;
export function parser_paused(a: number): number;
export function parser_errorCode(a: number): number;
export function parser_get_id(a: number): number;
export function parser_set_id(a: number, b: number): void;
export function parser_get_mode(a: number): number;
export function parser_set_mode(a: number, b: number): void;
export function parser_continueWithoutData(a: number): number;
export function parser_messageType(a: number): number;
export function parser_get_is_connect(a: number): number;
export function parser_set_is_connect(a: number, b: number): void;
export function parser_method(a: number): number;
export function parser_status(a: number): number;
export function parser_versionMajor(a: number): number;
export function parser_versionMinor(a: number): number;
export function parser_connection(a: number): number;
export function parser_hasContentLength(a: number): number;
export function parser_hasChunkedTransferEncoding(a: number): number;
export function parser_hasUpgrade(a: number): number;
export function parser_hasTrailers(a: number): number;
export function parser_contentLength(a: number): number;
export function parser_chunkSize(a: number): number;
export function parser_remainingContentLength(a: number): number;
export function parser_remainingChunkSize(a: number): number;
export function parser_get_skip_body(a: number): number;
export function parser_set_skip_body(a: number, b: number): void;
export function parser_setBeforeStateChange(a: number, b: number, c: number): void;
export function parser_setAfterStateChange(a: number, b: number, c: number): void;
export function parser_setOnError(a: number, b: number, c: number): void;
export function parser_setOnFinish(a: number, b: number, c: number): void;
export function parser_setOnMessageStart(a: number, b: number, c: number): void;
export function parser_setOnMessageComplete(a: number, b: number, c: number): void;
export function parser_setOnRequest(a: number, b: number, c: number): void;
export function parser_setOnResponse(a: number, b: number, c: number): void;
export function parser_setOnReset(a: number, b: number, c: number): void;
export function parser_setOnMethod(a: number, b: number, c: number): void;
export function parser_setOnUrl(a: number, b: number, c: number): void;
export function parser_setOnProtocol(a: number, b: number, c: number): void;
export function parser_setOnVersion(a: number, b: number, c: number): void;
export function parser_setOnStatus(a: number, b: number, c: number): void;
export function parser_setOnReason(a: number, b: number, c: number): void;
export function parser_setOnHeaderName(a: number, b: number, c: number): void;
export function parser_setOnHeaderValue(a: number, b: number, c: number): void;
export function parser_setOnHeaders(a: number, b: number, c: number): void;
export function parser_setOnConnect(a: number, b: number, c: number): void;
export function parser_setOnUpgrade(a: number, b: number, c: number): void;
export function parser_setOnChunkLength(a: number, b: number, c: number): void;
export function parser_setOnChunkExtensionName(a: number, b: number, c: number): void;
export function parser_setOnChunkExtensionValue(a: number, b: number, c: number): void;
export function parser_setOnBody(a: number, b: number, c: number): void;
export function parser_setOnData(a: number, b: number, c: number): void;
export function parser_setOnTrailerName(a: number, b: number, c: number): void;
export function parser_setOnTrailerValue(a: number, b: number, c: number): void;
export function parser_setOnTrailers(a: number, b: number, c: number): void;
export function __wbg_flags_free(a: number): void;
export function __wbg_get_flags_debug(a: number): number;
export function __wbg_set_flags_debug(a: number, b: number): void;
export function __wbg_get_flags_no_copy(a: number): number;
export function __wbg_set_flags_no_copy(a: number, b: number): void;
export function flags(): number;
export function __wbindgen_export_0(a: number, b: number): number;
export function __wbindgen_export_1(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_export_2(a: number, b: number, c: number): void;
export function __wbindgen_export_3(a: number): void;
